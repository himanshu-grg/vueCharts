{"remainingRequest":"C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\src\\components\\new-chart-using-vue.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\src\\components\\new-chart-using-vue.vue","mtime":1644560863881},{"path":"C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644471094936},{"path":"C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\node_modules\\babel-loader\\lib\\index.js","mtime":1644471094556},{"path":"C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644471094936},{"path":"C:\\Users\\worka\\indiaP2P\\VUE-API\\VueLineChart\\node_modules\\vue-loader\\lib\\index.js","mtime":1644471094762}],"contextDependencies":[],"result":["\nimport {Line} from 'vue-chartjs'\n\nexport default {\n  name:'sample',\n  extends: Line,\n  props: ['date', 'challenge'],\n  data () {\n    return {\n      dates:[],\n      values:[],\n      dat:'',\n      data:[],\n      datacollection: {\n        datasets: [\n          {  \n          data:this.data,\n          label: 'Chart from API ',\n          borderColor: '#7367F0'\n          }\n          // {\n          //   label: 'Data One',\n          //   pointBackgroundColor: '#F25207',\n          //   borderWidth: 5,\n          //   fill:false,\n          //   pointBorderColor: '#F25207',\n          //   data: [60, 40, 20, 50, 90, 10, 20, 40, 50, 70, 90, 100]\n          // },\n          // {\n          //   label: 'Data Two',\n          //   pointBackgroundColor: 'white',\n          //   borderWidth: 1,\n          //   opacity:0.5,\n          //   backgroundColor:\"#F2D707\",\n          //   pointBorderColor: '#249EBF',\n          //   data: [20, 60, 10, 80, 30, 50, 60, 20, 30, 40, 70, 20]\n          // }\n        ]\n      },\n      options: {\n        scales: {\n          xAxes: [{\n              type: 'time',\n              time: {\n                unit: 'month',\n                displayFormats: {\n                  month: 'MMM YYYY'\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                // eslint-disable-next-line no-unused-vars\n                callback (value, index, values) {\n                  return `${value}%`\n                }\n              }\n            }\n          ]},\n          legend: {\n          display: true\n        },\n        responsive: true,\n        aintainAspectRatio: false\n      }\n    }\n  },\n  created () {\n    // eslint-disable-next-line no-unused-vars\n    this.data = this.date.map((date, index) => ({\n      x: new Date(date * 1000),\n      y: this.challenge[index]\n    }))\n    let n=0\n    \n    this.data.forEach(i=>{\n      this.dates[n]= i.x\n      this.values[n]=i.y\n      n+=1\n    })\n    console.log(this.dates)\n    console.log(this.values)\n  },\n  mounted () {\n    this.renderChart(this.datacollection, this.options)\n  }\n}\n",{"version":3,"sources":["new-chart-using-vue.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"new-chart-using-vue.vue","sourceRoot":"src/components","sourcesContent":["<script>\r\n  import {Line} from 'vue-chartjs'\r\n\r\n  export default {\r\n    name:'sample',\r\n    extends: Line,\r\n    props: ['date', 'challenge'],\r\n    data () {\r\n      return {\r\n        dates:[],\r\n        values:[],\r\n        dat:'',\r\n        data:[],\r\n        datacollection: {\r\n          datasets: [\r\n            {  \r\n            data:this.data,\r\n            label: 'Chart from API ',\r\n            borderColor: '#7367F0'\r\n            }\r\n            // {\r\n            //   label: 'Data One',\r\n            //   pointBackgroundColor: '#F25207',\r\n            //   borderWidth: 5,\r\n            //   fill:false,\r\n            //   pointBorderColor: '#F25207',\r\n            //   data: [60, 40, 20, 50, 90, 10, 20, 40, 50, 70, 90, 100]\r\n            // },\r\n            // {\r\n            //   label: 'Data Two',\r\n            //   pointBackgroundColor: 'white',\r\n            //   borderWidth: 1,\r\n            //   opacity:0.5,\r\n            //   backgroundColor:\"#F2D707\",\r\n            //   pointBorderColor: '#249EBF',\r\n            //   data: [20, 60, 10, 80, 30, 50, 60, 20, 30, 40, 70, 20]\r\n            // }\r\n          ]\r\n        },\r\n        options: {\r\n          scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                  unit: 'month',\r\n                  displayFormats: {\r\n                    month: 'MMM YYYY'\r\n                  }\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  // eslint-disable-next-line no-unused-vars\r\n                  callback (value, index, values) {\r\n                    return `${value}%`\r\n                  }\r\n                }\r\n              }\r\n            ]},\r\n            legend: {\r\n            display: true\r\n          },\r\n          responsive: true,\r\n          aintainAspectRatio: false\r\n        }\r\n      }\r\n    },\r\n    created () {\r\n      // eslint-disable-next-line no-unused-vars\r\n      this.data = this.date.map((date, index) => ({\r\n        x: new Date(date * 1000),\r\n        y: this.challenge[index]\r\n      }))\r\n      let n=0\r\n      \r\n      this.data.forEach(i=>{\r\n        this.dates[n]= i.x\r\n        this.values[n]=i.y\r\n        n+=1\r\n      })\r\n      console.log(this.dates)\r\n      console.log(this.values)\r\n    },\r\n    mounted () {\r\n      this.renderChart(this.datacollection, this.options)\r\n    }\r\n  }\r\n</script>"]}]}